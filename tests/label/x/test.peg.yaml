  - type: program_segment
    main:
      type: main_program
      name: Test
      body:
        type: segment_body
        variable_declarations:
          - type: variable_declaration
            names: i
            t:
              type: type
              basic_type: INTEGER
        statements:
          - type: conditional_statement
            lbl:
              type: label
              name: if_label
            cond:
              type: variable
              base: 'TRUE'
              parts: []
            then_body:
              type: segment_body
              statements:
                - type: output_statement
                  list:
                    - '"if_label"'
          - type: iteration_statement
            lbl:
              type: label
              name: for_label
            tgt:
              type: iteration_target
              var:
                type: variable
                base: i
                parts: []
            ctrl:
              type: control
              init: '0'
              limit:
                type: limit
                value: '0'
            body:
              type: segment_body
              statements:
                - type: output_statement
                  list:
                    - '"for_label"'
          - type: assignment_statement
            targets:
              - type: target
                var:
                  type: variable
                  base: i
                  parts: []
            expr: '0'
          - type: selection_statement
            lbl:
              type: label
              name: select_label
            sel:
              type: variable
              base: 'TRUE'
              parts: []
            body:
              type: selection_body
              sel:
                type: selector
                head:
                  type: rel_expr
                  head:
                    type: variable
                    base: i
                    parts: []
                  op: '='
                  rhs: '0'
              body:
                type: segment_body
                statements:
                  - type: output_statement
                    list:
                      - '"select_label"'
            end: END SELECT;
          - type: repeat_statement
            name: repeat_label
          - type: output_statement
            list:
              - '"repeat_label_NO"'
          - type: conditional_statement
            lbl:
              type: label
              name: repeat_label
            cond:
              type: variable
              base: 'TRUE'
              parts: []
            then_body:
              type: segment_body
              statements:
                - type: output_statement
                  list:
                    - '"repeat_label"'
          - type: repent_statement
            name: repent_label
          - type: output_statement
            list:
              - '"repent_label_NO"'
          - type: conditional_statement
            lbl:
              type: label
              name: repent_label
            cond:
              type: variable
              base: 'TRUE'
              parts: []
            then_body:
              type: segment_body
              statements:
                - type: output_statement
                  list:
                    - '"repent_label"'
          - type: simple_compound
            body:
              type: segment_body
              statements:
                - type: output_statement
                  list:
                    - '"block"'
          - type: repent_statement
            name: block_label
          - type: simple_compound
            body:
              type: segment_body
              statements:
                - type: output_statement
                  list:
                    - '"label block_NO"'
            end_name: block_label
          - type: output_statement
            list:
              - '"."'
      end_name: Test
