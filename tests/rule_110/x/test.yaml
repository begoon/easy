node: ProgramStatement
token: PROGRAM / KEYWORD at 1:1
name: Rule110
segment:
  node: Segment
  token: TYPE / KEYWORD at 2:3
  types:
    - node: TypeIsStatement
      token: TYPE / KEYWORD at 2:3
      name: Row
      definition:
        node: Array
        token: ARRAY / IDENT at 2:15
        type: INTEGER
        start:
          node: IntegerLiteral
          token: 1 / INTEGER at 2:22
          type: INTEGER
          value: 1
        end:
          node: IntegerLiteral
          token: 32 / INTEGER at 2:24
          type: INTEGER
          value: 32
  variables:
    - node: DeclareStatement
      token: DECLARE / KEYWORD at 4:3
      names:
        - row
      type: Row
    - node: DeclareStatement
      token: DECLARE / KEYWORD at 5:3
      names:
        - N
        - n
        - i
      type: INTEGER
  subroutines:
    - node: ProcedureStatement
      token: PROCEDURE / KEYWORD at 7:3
      name: step
      arguments: []
      segment:
        node: Segment
        token: DECLARE / KEYWORD at 8:5
        types: []
        variables:
          - node: DeclareStatement
            token: DECLARE / KEYWORD at 8:5
            names:
              - i
            type: INTEGER
          - node: DeclareStatement
            token: DECLARE / KEYWORD at 9:5
            names:
              - next
            type: Row
        subroutines: []
        statements:
          node: Statements
          token: FOR / KEYWORD at 11:5
          statements:
            - node: ForStatement
              token: FOR / KEYWORD at 11:5
              variable:
                node: Variable
                token: i / IDENT at 11:9
                type: INTEGER
                name: i
                parts:
                  - i
              init:
                node: IntegerLiteral
                token: 1 / INTEGER at 11:14
                type: INTEGER
                value: 1
              do:
                node: Segment
                token: SET / KEYWORD at 11:24
                types: []
                variables: []
                subroutines: []
                statements:
                  node: Statements
                  token: SET / KEYWORD at 11:24
                  statements:
                    - node: SetStatement
                      token: SET / KEYWORD at 11:24
                      variables:
                        - node: Variable
                          token: next / IDENT at 11:28
                          type: Row
                          name: next[i]
                          parts:
                            - next
                            - node: Variable
                              token: i / IDENT at 11:33
                              type: INTEGER
                              name: i
                              parts:
                                - i
                      expression:
                        node: IntegerLiteral
                        token: 0 / INTEGER at 11:39
                        type: INTEGER
                        value: 0
              by:
              to:
                node: Variable
                token: N / IDENT at 11:19
                type: INTEGER
                name: N
                parts:
                  - N
              condition:
            - node: ForStatement
              token: FOR / KEYWORD at 13:5
              variable:
                node: Variable
                token: i / IDENT at 13:9
                type: INTEGER
                name: i
                parts:
                  - i
              init:
                node: IntegerLiteral
                token: 1 / INTEGER at 13:14
                type: INTEGER
                value: 1
              do:
                node: Segment
                token: DECLARE / KEYWORD at 14:7
                types: []
                variables:
                  - node: DeclareStatement
                    token: DECLARE / KEYWORD at 14:7
                    names:
                      - left
                      - c
                      - right
                    type: INTEGER
                  - node: DeclareStatement
                    token: DECLARE / KEYWORD at 15:7
                    names:
                      - s
                    type: INTEGER
                  - node: DeclareStatement
                    token: DECLARE / KEYWORD at 16:7
                    names:
                      - j
                    type: INTEGER
                subroutines: []
                statements:
                  node: Statements
                  token: SET / KEYWORD at 18:7
                  statements:
                    - node: SetStatement
                      token: SET / KEYWORD at 18:7
                      variables:
                        - node: Variable
                          token: j / IDENT at 18:11
                          type: INTEGER
                          name: j
                          parts:
                            - j
                      expression:
                        node: BinaryOperation
                        token: '- / SYMBOL at 18:18'
                        type: INTEGER
                        operation: '-'
                        left:
                          node: Variable
                          token: i / IDENT at 18:16
                          type: INTEGER
                          name: i
                          parts:
                            - i
                        right:
                          node: IntegerLiteral
                          token: 1 / INTEGER at 18:20
                          type: INTEGER
                          value: 1
                    - node: IfStatement
                      token: IF / KEYWORD at 19:7
                      cond:
                        node: BinaryOperation
                        token: j / IDENT at 19:10
                        type: BOOLEAN
                        operation: <
                        left:
                          node: Variable
                          token: j / IDENT at 19:10
                          type: INTEGER
                          name: j
                          parts:
                            - j
                        right:
                          node: IntegerLiteral
                          token: 1 / INTEGER at 19:14
                          type: INTEGER
                          value: 1
                      then_branch:
                        node: Segment
                        token: SET / KEYWORD at 19:21
                        types: []
                        variables: []
                        subroutines: []
                        statements:
                          node: Statements
                          token: SET / KEYWORD at 19:21
                          statements:
                            - node: SetStatement
                              token: SET / KEYWORD at 19:21
                              variables:
                                - node: Variable
                                  token: j / IDENT at 19:25
                                  type: INTEGER
                                  name: j
                                  parts:
                                    - j
                              expression:
                                node: Variable
                                token: N / IDENT at 19:30
                                type: INTEGER
                                name: N
                                parts:
                                  - N
                      else_branch:
                    - node: SetStatement
                      token: SET / KEYWORD at 20:7
                      variables:
                        - node: Variable
                          token: left / IDENT at 20:11
                          type: INTEGER
                          name: left
                          parts:
                            - left
                      expression:
                        node: Variable
                        token: row / IDENT at 20:19
                        type: Row
                        name: row[j]
                        parts:
                          - row
                          - node: Variable
                            token: j / IDENT at 20:23
                            type: INTEGER
                            name: j
                            parts:
                              - j
                    - node: SetStatement
                      token: SET / KEYWORD at 22:7
                      variables:
                        - node: Variable
                          token: c / IDENT at 22:11
                          type: INTEGER
                          name: c
                          parts:
                            - c
                      expression:
                        node: Variable
                        token: row / IDENT at 22:16
                        type: Row
                        name: row[i]
                        parts:
                          - row
                          - node: Variable
                            token: i / IDENT at 22:20
                            type: INTEGER
                            name: i
                            parts:
                              - i
                    - node: SetStatement
                      token: SET / KEYWORD at 24:7
                      variables:
                        - node: Variable
                          token: j / IDENT at 24:11
                          type: INTEGER
                          name: j
                          parts:
                            - j
                      expression:
                        node: BinaryOperation
                        token: + / SYMBOL at 24:18
                        type: INTEGER
                        operation: +
                        left:
                          node: Variable
                          token: i / IDENT at 24:16
                          type: INTEGER
                          name: i
                          parts:
                            - i
                        right:
                          node: IntegerLiteral
                          token: 1 / INTEGER at 24:20
                          type: INTEGER
                          value: 1
                    - node: IfStatement
                      token: IF / KEYWORD at 25:7
                      cond:
                        node: BinaryOperation
                        token: j / IDENT at 25:10
                        type: BOOLEAN
                        operation: '>'
                        left:
                          node: Variable
                          token: j / IDENT at 25:10
                          type: INTEGER
                          name: j
                          parts:
                            - j
                        right:
                          node: Variable
                          token: N / IDENT at 25:14
                          type: INTEGER
                          name: N
                          parts:
                            - N
                      then_branch:
                        node: Segment
                        token: SET / KEYWORD at 25:21
                        types: []
                        variables: []
                        subroutines: []
                        statements:
                          node: Statements
                          token: SET / KEYWORD at 25:21
                          statements:
                            - node: SetStatement
                              token: SET / KEYWORD at 25:21
                              variables:
                                - node: Variable
                                  token: j / IDENT at 25:25
                                  type: INTEGER
                                  name: j
                                  parts:
                                    - j
                              expression:
                                node: IntegerLiteral
                                token: 1 / INTEGER at 25:30
                                type: INTEGER
                                value: 1
                      else_branch:
                    - node: SetStatement
                      token: SET / KEYWORD at 26:7
                      variables:
                        - node: Variable
                          token: right / IDENT at 26:11
                          type: INTEGER
                          name: right
                          parts:
                            - right
                      expression:
                        node: Variable
                        token: row / IDENT at 26:20
                        type: Row
                        name: row[j]
                        parts:
                          - row
                          - node: Variable
                            token: j / IDENT at 26:24
                            type: INTEGER
                            name: j
                            parts:
                              - j
                    - node: SetStatement
                      token: SET / KEYWORD at 28:7
                      variables:
                        - node: Variable
                          token: s / IDENT at 28:11
                          type: INTEGER
                          name: s
                          parts:
                            - s
                      expression:
                        node: BinaryOperation
                        token: + / SYMBOL at 28:25
                        type: INTEGER
                        operation: +
                        left:
                          node: BinaryOperation
                          token: + / SYMBOL at 28:21
                          type: INTEGER
                          operation: +
                          left:
                            node: Variable
                            token: left / IDENT at 28:16
                            type: INTEGER
                            name: left
                            parts:
                              - left
                          right:
                            node: Variable
                            token: c / IDENT at 28:23
                            type: INTEGER
                            name: c
                            parts:
                              - c
                        right:
                          node: Variable
                          token: right / IDENT at 28:27
                          type: INTEGER
                          name: right
                          parts:
                            - right
                    - node: SelectStatement
                      token: SELECT / KEYWORD at 30:7
                      expr:
                        node: BoolLiteral
                        token: TRUE / KEYWORD at 30:14
                        type: BOOLEAN
                        value: true
                      cases:
                        -   - node: BinaryOperation
                              token: s / IDENT at 31:15
                              type: BOOLEAN
                              operation: '='
                              left:
                                node: Variable
                                token: s / IDENT at 31:15
                                type: INTEGER
                                name: s
                                parts:
                                  - s
                              right:
                                node: IntegerLiteral
                                token: 2 / INTEGER at 31:19
                                type: INTEGER
                                value: 2
                            - node: Segment
                              token: SET / KEYWORD at 31:23
                              types: []
                              variables: []
                              subroutines: []
                              statements:
                                node: Statements
                                token: SET / KEYWORD at 31:23
                                statements:
                                  - node: SetStatement
                                    token: SET / KEYWORD at 31:23
                                    variables:
                                      - node: Variable
                                        token: next / IDENT at 31:27
                                        type: Row
                                        name: next[i]
                                        parts:
                                          - next
                                          - node: Variable
                                            token: i / IDENT at 31:32
                                            type: INTEGER
                                            name: i
                                            parts:
                                              - i
                                    expression:
                                      node: IntegerLiteral
                                      token: 1 / INTEGER at 31:38
                                      type: INTEGER
                                      value: 1
                        -   - node: BinaryOperation
                              token: '| / SYMBOL at 32:21'
                              type: BOOLEAN
                              operation: '|'
                              left:
                                node: BinaryOperation
                                token: s / IDENT at 32:15
                                type: BOOLEAN
                                operation: '='
                                left:
                                  node: Variable
                                  token: s / IDENT at 32:15
                                  type: INTEGER
                                  name: s
                                  parts:
                                    - s
                                right:
                                  node: IntegerLiteral
                                  token: 0 / INTEGER at 32:19
                                  type: INTEGER
                                  value: 0
                              right:
                                node: BinaryOperation
                                token: s / IDENT at 32:23
                                type: BOOLEAN
                                operation: '='
                                left:
                                  node: Variable
                                  token: s / IDENT at 32:23
                                  type: INTEGER
                                  name: s
                                  parts:
                                    - s
                                right:
                                  node: IntegerLiteral
                                  token: 3 / INTEGER at 32:27
                                  type: INTEGER
                                  value: 3
                            - node: Segment
                              token: SET / KEYWORD at 32:31
                              types: []
                              variables: []
                              subroutines: []
                              statements:
                                node: Statements
                                token: SET / KEYWORD at 32:31
                                statements:
                                  - node: SetStatement
                                    token: SET / KEYWORD at 32:31
                                    variables:
                                      - node: Variable
                                        token: next / IDENT at 32:35
                                        type: Row
                                        name: next[i]
                                        parts:
                                          - next
                                          - node: Variable
                                            token: i / IDENT at 32:40
                                            type: INTEGER
                                            name: i
                                            parts:
                                              - i
                                    expression:
                                      node: IntegerLiteral
                                      token: 0 / INTEGER at 32:46
                                      type: INTEGER
                                      value: 0
                        -   - 
                            - node: Segment
                              token: IF / KEYWORD at 33:20
                              types: []
                              variables: []
                              subroutines: []
                              statements:
                                node: Statements
                                token: IF / KEYWORD at 33:20
                                statements:
                                  - node: IfStatement
                                    token: IF / KEYWORD at 33:20
                                    cond:
                                      node: BinaryOperation
                                      token: c / IDENT at 33:23
                                      type: BOOLEAN
                                      operation: '='
                                      left:
                                        node: Variable
                                        token: c / IDENT at 33:23
                                        type: INTEGER
                                        name: c
                                        parts:
                                          - c
                                      right:
                                        node: IntegerLiteral
                                        token: 1 / INTEGER at 33:27
                                        type: INTEGER
                                        value: 1
                                    then_branch:
                                      node: Segment
                                      token: SET / KEYWORD at 33:34
                                      types: []
                                      variables: []
                                      subroutines: []
                                      statements:
                                        node: Statements
                                        token: SET / KEYWORD at 33:34
                                        statements:
                                          - node: SetStatement
                                            token: SET / KEYWORD at 33:34
                                            variables:
                                              - node: Variable
                                                token: next / IDENT at 33:38
                                                type: Row
                                                name: next[i]
                                                parts:
                                                  - next
                                                  - node: Variable
                                                    token: i / IDENT at 33:43
                                                    type: INTEGER
                                                    name: i
                                                    parts:
                                                      - i
                                            expression:
                                              node: IntegerLiteral
                                              token: 1 / INTEGER at 33:49
                                              type: INTEGER
                                              value: 1
                                    else_branch:
                                      node: Segment
                                      token: SET / KEYWORD at 33:57
                                      types: []
                                      variables: []
                                      subroutines: []
                                      statements:
                                        node: Statements
                                        token: SET / KEYWORD at 33:57
                                        statements:
                                          - node: SetStatement
                                            token: SET / KEYWORD at 33:57
                                            variables:
                                              - node: Variable
                                                token: next / IDENT at 33:61
                                                type: Row
                                                name: next[i]
                                                parts:
                                                  - next
                                                  - node: Variable
                                                    token: i / IDENT at 33:66
                                                    type: INTEGER
                                                    name: i
                                                    parts:
                                                      - i
                                            expression:
                                              node: Variable
                                              token: right / IDENT at 33:72
                                              type: INTEGER
                                              name: right
                                              parts:
                                                - right
              by:
              to:
                node: Variable
                token: N / IDENT at 13:19
                type: INTEGER
                name: N
                parts:
                  - N
              condition:
            - node: ForStatement
              token: FOR / KEYWORD at 37:5
              variable:
                node: Variable
                token: i / IDENT at 37:9
                type: INTEGER
                name: i
                parts:
                  - i
              init:
                node: IntegerLiteral
                token: 1 / INTEGER at 37:14
                type: INTEGER
                value: 1
              do:
                node: Segment
                token: SET / KEYWORD at 37:24
                types: []
                variables: []
                subroutines: []
                statements:
                  node: Statements
                  token: SET / KEYWORD at 37:24
                  statements:
                    - node: SetStatement
                      token: SET / KEYWORD at 37:24
                      variables:
                        - node: Variable
                          token: row / IDENT at 37:28
                          type: Row
                          name: row[i]
                          parts:
                            - row
                            - node: Variable
                              token: i / IDENT at 37:32
                              type: INTEGER
                              name: i
                              parts:
                                - i
                      expression:
                        node: Variable
                        token: next / IDENT at 37:38
                        type: Row
                        name: next[i]
                        parts:
                          - next
                          - node: Variable
                            token: i / IDENT at 37:43
                            type: INTEGER
                            name: i
                            parts:
                              - i
              by:
              to:
                node: Variable
                token: N / IDENT at 37:19
                type: INTEGER
                name: N
                parts:
                  - N
              condition:
    - node: ProcedureStatement
      token: PROCEDURE / KEYWORD at 40:3
      name: print
      arguments: []
      segment:
        node: Segment
        token: DECLARE / KEYWORD at 41:5
        types: []
        variables:
          - node: DeclareStatement
            token: DECLARE / KEYWORD at 41:5
            names:
              - i
            type: INTEGER
        subroutines: []
        statements:
          node: Statements
          token: FOR / KEYWORD at 42:5
          statements:
            - node: ForStatement
              token: FOR / KEYWORD at 42:5
              variable:
                node: Variable
                token: i / IDENT at 42:9
                type: INTEGER
                name: i
                parts:
                  - i
              init:
                node: IntegerLiteral
                token: 1 / INTEGER at 42:14
                type: INTEGER
                value: 1
              do:
                node: Segment
                token: IF / KEYWORD at 43:7
                types: []
                variables: []
                subroutines: []
                statements:
                  node: Statements
                  token: IF / KEYWORD at 43:7
                  statements:
                    - node: IfStatement
                      token: IF / KEYWORD at 43:7
                      cond:
                        node: BinaryOperation
                        token: row / IDENT at 43:10
                        type: BOOLEAN
                        operation: '='
                        left:
                          node: Variable
                          token: row / IDENT at 43:10
                          type: Row
                          name: row[i]
                          parts:
                            - row
                            - node: Variable
                              token: i / IDENT at 43:14
                              type: INTEGER
                              name: i
                              parts:
                                - i
                        right:
                          node: IntegerLiteral
                          token: 1 / INTEGER at 43:19
                          type: INTEGER
                          value: 1
                      then_branch:
                        node: Segment
                        token: OUTPUT / KEYWORD at 43:26
                        types: []
                        variables: []
                        subroutines: []
                        statements:
                          node: Statements
                          token: OUTPUT / KEYWORD at 43:26
                          statements:
                            - node: OutputStatement
                              token: OUTPUT / KEYWORD at 43:26
                              arguments:
                                - node: StringLiteral
                                  token: X / STRING at 43:33
                                  type: STRING
                                  value: X
                      else_branch:
                        node: Segment
                        token: OUTPUT / KEYWORD at 43:43
                        types: []
                        variables: []
                        subroutines: []
                        statements:
                          node: Statements
                          token: OUTPUT / KEYWORD at 43:43
                          statements:
                            - node: OutputStatement
                              token: OUTPUT / KEYWORD at 43:43
                              arguments:
                                - node: StringLiteral
                                  token: . / STRING at 43:50
                                  type: STRING
                                  value: .
              by:
              to:
                node: Variable
                token: N / IDENT at 42:19
                type: INTEGER
                name: N
                parts:
                  - N
              condition:
            - node: OutputStatement
              token: OUTPUT / KEYWORD at 45:5
              arguments:
                - node: StringLiteral
                  token: '   / STRING at 45:12'
                  type: STRING
                  value: '  '
  statements:
    node: Statements
    token: SET / KEYWORD at 48:3
    statements:
      - node: SetStatement
        token: SET / KEYWORD at 48:3
        variables:
          - node: Variable
            token: N / IDENT at 48:7
            type: INTEGER
            name: N
            parts:
              - N
        expression:
          node: IntegerLiteral
          token: 32 / INTEGER at 48:12
          type: INTEGER
          value: 32
      - node: ForStatement
        token: FOR / KEYWORD at 50:3
        variable:
          node: Variable
          token: i / IDENT at 50:7
          type: INTEGER
          name: i
          parts:
            - i
        init:
          node: IntegerLiteral
          token: 1 / INTEGER at 50:12
          type: INTEGER
          value: 1
        do:
          node: Segment
          token: SET / KEYWORD at 50:22
          types: []
          variables: []
          subroutines: []
          statements:
            node: Statements
            token: SET / KEYWORD at 50:22
            statements:
              - node: SetStatement
                token: SET / KEYWORD at 50:22
                variables:
                  - node: Variable
                    token: row / IDENT at 50:26
                    type: Row
                    name: row[i]
                    parts:
                      - row
                      - node: Variable
                        token: i / IDENT at 50:30
                        type: INTEGER
                        name: i
                        parts:
                          - i
                expression:
                  node: IntegerLiteral
                  token: 0 / INTEGER at 50:36
                  type: INTEGER
                  value: 0
        by:
        to:
          node: Variable
          token: N / IDENT at 50:17
          type: INTEGER
          name: N
          parts:
            - N
        condition:
      - node: SetStatement
        token: SET / KEYWORD at 51:3
        variables:
          - node: Variable
            token: row / IDENT at 51:7
            type: Row
            name: row[FIX((N / 2))]
            parts:
              - row
              - node: FunctionCall
                token: FIX / IDENT at 51:11
                type: INTEGER
                name: FIX
                arguments:
                  - node: BinaryOperation
                    token: N / IDENT at 51:15
                    type: INTEGER
                    operation: /
                    left:
                      node: Variable
                      token: N / IDENT at 51:15
                      type: INTEGER
                      name: N
                      parts:
                        - N
                    right:
                      node: IntegerLiteral
                      token: 2 / INTEGER at 51:17
                      type: INTEGER
                      value: 2
        expression:
          node: IntegerLiteral
          token: 1 / INTEGER at 51:24
          type: INTEGER
          value: 1
      - node: CallStatement
        token: CALL / KEYWORD at 53:3
        name: print
        arguments: []
      - node: ForStatement
        token: FOR / KEYWORD at 55:3
        variable:
          node: Variable
          token: n / IDENT at 55:7
          type: INTEGER
          name: n
          parts:
            - n
        init:
          node: IntegerLiteral
          token: 1 / INTEGER at 55:12
          type: INTEGER
          value: 1
        do:
          node: Segment
          token: CALL / KEYWORD at 56:5
          types: []
          variables: []
          subroutines: []
          statements:
            node: Statements
            token: CALL / KEYWORD at 56:5
            statements:
              - node: CallStatement
                token: CALL / KEYWORD at 56:5
                name: step
                arguments: []
              - node: CallStatement
                token: CALL / KEYWORD at 57:5
                name: print
                arguments: []
        by:
        to:
          node: IntegerLiteral
          token: 10 / INTEGER at 55:17
          type: INTEGER
          value: 10
        condition:
