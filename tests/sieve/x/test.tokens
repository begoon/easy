tests/sieve/test.easy:1:1	 PROGRAM
tests/sieve/test.easy:1:9	 Eratosthenes
tests/sieve/test.easy:1:21	 :
tests/sieve/test.easy:2:3	 DECLARE
tests/sieve/test.easy:2:11	 topnum
tests/sieve/test.easy:2:18	 INTEGER
tests/sieve/test.easy:2:25	 ;
tests/sieve/test.easy:4:3	 FUNCTION
tests/sieve/test.easy:4:12	 abs
tests/sieve/test.easy:4:15	 (
tests/sieve/test.easy:4:16	 x
tests/sieve/test.easy:4:18	 REAL
tests/sieve/test.easy:4:22	 )
tests/sieve/test.easy:4:24	 REAL
tests/sieve/test.easy:4:28	 :
tests/sieve/test.easy:5:5	 IF
tests/sieve/test.easy:5:8	 x
tests/sieve/test.easy:5:10	 <
tests/sieve/test.easy:5:12	 0
tests/sieve/test.easy:5:14	 THEN
tests/sieve/test.easy:5:19	 RETURN
tests/sieve/test.easy:5:26	 -
tests/sieve/test.easy:5:27	 x
tests/sieve/test.easy:5:28	 ;
tests/sieve/test.easy:5:30	 ELSE
tests/sieve/test.easy:5:35	 RETURN
tests/sieve/test.easy:5:42	 x
tests/sieve/test.easy:5:43	 ;
tests/sieve/test.easy:5:45	 FI
tests/sieve/test.easy:5:47	 ;
tests/sieve/test.easy:6:3	 END
tests/sieve/test.easy:6:7	 FUNCTION
tests/sieve/test.easy:6:16	 abs
tests/sieve/test.easy:6:19	 ;
tests/sieve/test.easy:8:3	 FUNCTION
tests/sieve/test.easy:8:12	 integersqrt
tests/sieve/test.easy:8:23	 (
tests/sieve/test.easy:8:24	 a
tests/sieve/test.easy:8:26	 INTEGER
tests/sieve/test.easy:8:33	 )
tests/sieve/test.easy:8:35	 INTEGER
tests/sieve/test.easy:8:42	 :
tests/sieve/test.easy:9:5	 SELECT
tests/sieve/test.easy:9:12	 TRUE
tests/sieve/test.easy:9:17	 OF
tests/sieve/test.easy:10:7	 CASE
tests/sieve/test.easy:10:12	 (
tests/sieve/test.easy:10:13	 a
tests/sieve/test.easy:10:15	 <
tests/sieve/test.easy:10:17	 0
tests/sieve/test.easy:10:18	 )
tests/sieve/test.easy:10:19	 :
tests/sieve/test.easy:10:21	 OUTPUT
tests/sieve/test.easy:10:28	 a < 0 in FUNCTION integersqrt.
tests/sieve/test.easy:10:60	 ;
tests/sieve/test.easy:10:62	 EXIT
tests/sieve/test.easy:10:66	 ;
tests/sieve/test.easy:11:7	 CASE
tests/sieve/test.easy:11:12	 (
tests/sieve/test.easy:11:13	 a
tests/sieve/test.easy:11:15	 =
tests/sieve/test.easy:11:17	 0
tests/sieve/test.easy:11:18	 )
tests/sieve/test.easy:11:19	 :
tests/sieve/test.easy:11:21	 RETURN
tests/sieve/test.easy:11:28	 0
tests/sieve/test.easy:11:29	 ;
tests/sieve/test.easy:12:7	 CASE
tests/sieve/test.easy:12:12	 (
tests/sieve/test.easy:12:13	 a
tests/sieve/test.easy:12:15	 >
tests/sieve/test.easy:12:17	 0
tests/sieve/test.easy:12:18	 )
tests/sieve/test.easy:12:19	 :
tests/sieve/test.easy:13:9	 DECLARE
tests/sieve/test.easy:13:17	 (
tests/sieve/test.easy:13:18	 x
tests/sieve/test.easy:13:19	 ,
tests/sieve/test.easy:13:21	 ra
tests/sieve/test.easy:13:23	 )
tests/sieve/test.easy:13:25	 REAL
tests/sieve/test.easy:13:29	 ;
tests/sieve/test.easy:14:9	 DECLARE
tests/sieve/test.easy:14:17	 epsilon
tests/sieve/test.easy:14:25	 REAL
tests/sieve/test.easy:14:29	 ;
tests/sieve/test.easy:15:9	 DECLARE
tests/sieve/test.easy:15:17	 sqrt
tests/sieve/test.easy:15:22	 INTEGER
tests/sieve/test.easy:15:29	 ;
tests/sieve/test.easy:16:9	 SET
tests/sieve/test.easy:16:13	 ra
tests/sieve/test.easy:16:16	 :=
tests/sieve/test.easy:16:19	 FLOAT
tests/sieve/test.easy:16:24	 (
tests/sieve/test.easy:16:25	 a
tests/sieve/test.easy:16:26	 )
tests/sieve/test.easy:16:27	 ;
tests/sieve/test.easy:17:9	 SET
tests/sieve/test.easy:17:13	 epsilon
tests/sieve/test.easy:17:21	 :=
tests/sieve/test.easy:17:24	 0.0000001
tests/sieve/test.easy:17:33	 *
tests/sieve/test.easy:17:34	 ra
tests/sieve/test.easy:17:36	 ;
tests/sieve/test.easy:18:9	 FOR
tests/sieve/test.easy:18:13	 x
tests/sieve/test.easy:18:15	 :=
tests/sieve/test.easy:18:18	 ra
tests/sieve/test.easy:18:20	 /
tests/sieve/test.easy:18:21	 2.
tests/sieve/test.easy:18:24	 BY
tests/sieve/test.easy:18:27	 (
tests/sieve/test.easy:18:28	 ra
tests/sieve/test.easy:18:30	 /
tests/sieve/test.easy:18:31	 x
tests/sieve/test.easy:18:32	 -
tests/sieve/test.easy:18:33	 x
tests/sieve/test.easy:18:34	 )
tests/sieve/test.easy:18:35	 /
tests/sieve/test.easy:18:36	 2.
tests/sieve/test.easy:19:11	 WHILE
tests/sieve/test.easy:19:17	 abs
tests/sieve/test.easy:19:20	 (
tests/sieve/test.easy:19:21	 ra
tests/sieve/test.easy:19:23	 -
tests/sieve/test.easy:19:24	 x
tests/sieve/test.easy:19:25	 *
tests/sieve/test.easy:19:26	 x
tests/sieve/test.easy:19:27	 )
tests/sieve/test.easy:19:29	 >
tests/sieve/test.easy:19:31	 epsilon
tests/sieve/test.easy:19:39	 DO
tests/sieve/test.easy:19:42	 ;
tests/sieve/test.easy:20:9	 END
tests/sieve/test.easy:20:13	 FOR
tests/sieve/test.easy:20:16	 ;
tests/sieve/test.easy:21:9	 FOR
tests/sieve/test.easy:21:13	 sqrt
tests/sieve/test.easy:21:18	 :=
tests/sieve/test.easy:21:21	 FIX
tests/sieve/test.easy:21:24	 (
tests/sieve/test.easy:21:25	 x
tests/sieve/test.easy:21:26	 )
tests/sieve/test.easy:21:27	 -
tests/sieve/test.easy:21:28	 1
tests/sieve/test.easy:21:30	 BY
tests/sieve/test.easy:21:33	 1
tests/sieve/test.easy:22:11	 WHILE
tests/sieve/test.easy:22:17	 (
tests/sieve/test.easy:22:18	 sqrt
tests/sieve/test.easy:22:22	 +
tests/sieve/test.easy:22:23	 1
tests/sieve/test.easy:22:24	 )
tests/sieve/test.easy:22:26	 *
tests/sieve/test.easy:22:28	 (
tests/sieve/test.easy:22:29	 sqrt
tests/sieve/test.easy:22:33	 +
tests/sieve/test.easy:22:34	 1
tests/sieve/test.easy:22:35	 )
tests/sieve/test.easy:22:37	 <=
tests/sieve/test.easy:22:40	 a
tests/sieve/test.easy:22:42	 DO
tests/sieve/test.easy:22:45	 ;
tests/sieve/test.easy:23:9	 END
tests/sieve/test.easy:23:13	 FOR
tests/sieve/test.easy:23:16	 ;
tests/sieve/test.easy:24:9	 RETURN
tests/sieve/test.easy:24:16	 sqrt
tests/sieve/test.easy:24:20	 ;
tests/sieve/test.easy:25:5	 END
tests/sieve/test.easy:25:9	 SELECT
tests/sieve/test.easy:25:15	 ;
tests/sieve/test.easy:26:3	 END
tests/sieve/test.easy:26:7	 FUNCTION
tests/sieve/test.easy:26:16	 integersqrt
tests/sieve/test.easy:26:27	 ;
tests/sieve/test.easy:28:3	 INPUT
tests/sieve/test.easy:28:9	 topnum
tests/sieve/test.easy:28:15	 ;
tests/sieve/test.easy:30:3	 IF
tests/sieve/test.easy:30:6	 topnum
tests/sieve/test.easy:30:13	 >
tests/sieve/test.easy:30:15	 0
tests/sieve/test.easy:30:17	 THEN
tests/sieve/test.easy:31:5	 DECLARE
tests/sieve/test.easy:31:13	 sieve
tests/sieve/test.easy:31:19	 ARRAY
tests/sieve/test.easy:31:24	 [
tests/sieve/test.easy:31:25	 1
tests/sieve/test.easy:31:26	 :
tests/sieve/test.easy:31:27	 topnum
tests/sieve/test.easy:31:33	 ]
tests/sieve/test.easy:31:35	 OF
tests/sieve/test.easy:31:38	 BOOLEAN
tests/sieve/test.easy:31:45	 ;
tests/sieve/test.easy:32:5	 DECLARE
tests/sieve/test.easy:32:13	 (
tests/sieve/test.easy:32:14	 i
tests/sieve/test.easy:32:15	 ,
tests/sieve/test.easy:32:17	 limit
tests/sieve/test.easy:32:22	 ,
tests/sieve/test.easy:32:24	 count
tests/sieve/test.easy:32:29	 )
tests/sieve/test.easy:32:31	 INTEGER
tests/sieve/test.easy:32:38	 ;
tests/sieve/test.easy:33:5	 SET
tests/sieve/test.easy:33:9	 topnum
tests/sieve/test.easy:33:16	 :=
tests/sieve/test.easy:33:19	 topnum
tests/sieve/test.easy:33:26	 +
tests/sieve/test.easy:33:28	 1
tests/sieve/test.easy:33:29	 ;
tests/sieve/test.easy:34:5	 FOR
tests/sieve/test.easy:34:9	 i
tests/sieve/test.easy:34:11	 :=
tests/sieve/test.easy:34:14	 1
tests/sieve/test.easy:34:16	 TO
tests/sieve/test.easy:34:19	 topnum
tests/sieve/test.easy:34:26	 DO
tests/sieve/test.easy:34:29	 SET
tests/sieve/test.easy:34:33	 sieve
tests/sieve/test.easy:34:38	 [
tests/sieve/test.easy:34:39	 i
tests/sieve/test.easy:34:40	 ]
tests/sieve/test.easy:34:42	 :=
tests/sieve/test.easy:34:45	 TRUE
tests/sieve/test.easy:34:49	 ;
tests/sieve/test.easy:34:51	 END
tests/sieve/test.easy:34:55	 FOR
tests/sieve/test.easy:34:58	 ;
tests/sieve/test.easy:35:5	 SET
tests/sieve/test.easy:35:9	 limit
tests/sieve/test.easy:35:15	 :=
tests/sieve/test.easy:35:18	 integersqrt
tests/sieve/test.easy:35:29	 (
tests/sieve/test.easy:35:30	 topnum
tests/sieve/test.easy:35:36	 )
tests/sieve/test.easy:35:37	 +
tests/sieve/test.easy:35:38	 1
tests/sieve/test.easy:35:39	 ;
tests/sieve/test.easy:36:5	 FOR
tests/sieve/test.easy:36:9	 i
tests/sieve/test.easy:36:11	 :=
tests/sieve/test.easy:36:14	 2
tests/sieve/test.easy:36:16	 TO
tests/sieve/test.easy:36:19	 limit
tests/sieve/test.easy:36:25	 DO
tests/sieve/test.easy:37:7	 IF
tests/sieve/test.easy:37:10	 sieve
tests/sieve/test.easy:37:15	 [
tests/sieve/test.easy:37:16	 i
tests/sieve/test.easy:37:17	 ]
tests/sieve/test.easy:37:19	 THEN
tests/sieve/test.easy:38:9	 DECLARE
tests/sieve/test.easy:38:17	 j
tests/sieve/test.easy:38:19	 INTEGER
tests/sieve/test.easy:38:26	 ;
tests/sieve/test.easy:39:9	 FOR
tests/sieve/test.easy:39:13	 j
tests/sieve/test.easy:39:15	 :=
tests/sieve/test.easy:39:18	 2
tests/sieve/test.easy:39:19	 *
tests/sieve/test.easy:39:20	 i
tests/sieve/test.easy:39:22	 BY
tests/sieve/test.easy:39:25	 i
tests/sieve/test.easy:39:27	 TO
tests/sieve/test.easy:39:30	 topnum
tests/sieve/test.easy:39:37	 DO
tests/sieve/test.easy:39:40	 SET
tests/sieve/test.easy:39:44	 sieve
tests/sieve/test.easy:39:49	 [
tests/sieve/test.easy:39:50	 j
tests/sieve/test.easy:39:51	 ]
tests/sieve/test.easy:39:53	 :=
tests/sieve/test.easy:39:56	 FALSE
tests/sieve/test.easy:39:61	 ;
tests/sieve/test.easy:39:63	 END
tests/sieve/test.easy:39:67	 FOR
tests/sieve/test.easy:39:70	 ;
tests/sieve/test.easy:40:7	 FI
tests/sieve/test.easy:40:9	 ;
tests/sieve/test.easy:41:5	 END
tests/sieve/test.easy:41:9	 FOR
tests/sieve/test.easy:41:12	 ;
tests/sieve/test.easy:42:5	 SET
tests/sieve/test.easy:42:9	 count
tests/sieve/test.easy:42:15	 :=
tests/sieve/test.easy:42:18	 0
tests/sieve/test.easy:42:19	 ;
tests/sieve/test.easy:43:5	 FOR
tests/sieve/test.easy:43:9	 i
tests/sieve/test.easy:43:11	 :=
tests/sieve/test.easy:43:14	 1
tests/sieve/test.easy:43:16	 TO
tests/sieve/test.easy:43:19	 topnum
tests/sieve/test.easy:43:26	 DO
tests/sieve/test.easy:44:7	 IF
tests/sieve/test.easy:44:10	 sieve
tests/sieve/test.easy:44:15	 [
tests/sieve/test.easy:44:16	 i
tests/sieve/test.easy:44:17	 ]
tests/sieve/test.easy:44:19	 THEN
tests/sieve/test.easy:45:9	 SET
tests/sieve/test.easy:45:13	 count
tests/sieve/test.easy:45:19	 :=
tests/sieve/test.easy:45:22	 count
tests/sieve/test.easy:45:28	 +
tests/sieve/test.easy:45:30	 1
tests/sieve/test.easy:45:31	 ;
tests/sieve/test.easy:46:9	 OUTPUT
tests/sieve/test.easy:46:16	 Prime[
tests/sieve/test.easy:46:25	 ||
tests/sieve/test.easy:46:28	 count
tests/sieve/test.easy:46:34	 ||
tests/sieve/test.easy:46:37	 ] = 
tests/sieve/test.easy:46:44	 ||
tests/sieve/test.easy:46:47	 i
tests/sieve/test.easy:46:48	 ;
tests/sieve/test.easy:47:7	 FI
tests/sieve/test.easy:47:9	 ;
tests/sieve/test.easy:48:5	 END
tests/sieve/test.easy:48:9	 FOR
tests/sieve/test.easy:48:12	 ;
tests/sieve/test.easy:49:3	 ELSE
tests/sieve/test.easy:50:5	 OUTPUT
tests/sieve/test.easy:50:12	 Input value 
tests/sieve/test.easy:50:27	 ||
tests/sieve/test.easy:50:30	 topnum
tests/sieve/test.easy:50:37	 ||
tests/sieve/test.easy:50:40	  non-positive.
tests/sieve/test.easy:50:56	 ;
tests/sieve/test.easy:51:3	 FI
tests/sieve/test.easy:51:5	 ;
tests/sieve/test.easy:53:3	 EXIT
tests/sieve/test.easy:53:7	 ;
tests/sieve/test.easy:55:1	 END
tests/sieve/test.easy:55:5	 PROGRAM
tests/sieve/test.easy:55:13	 Eratosthenes
tests/sieve/test.easy:55:25	 ;
tests/sieve/test.easy:56:1	 
