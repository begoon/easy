PROGRAM Eratosthenes
    Variables:
        topnum: INTEGER
    Subroutines:
        FUNCTION abs(REAL x) : REAL
            Statements:
                IF (x < 0) THEN
                    Statements:
                        RETURN (-x)
                ELSE
                    Statements:
                        RETURN x
                FI
                RETURN 0
        FUNCTION integersqrt(INTEGER a) : INTEGER
            Statements:
                SELECT TRUE
                    CASE (a < 0):
                        Statements:
                            OUTPUT('a < 0 in FUNCTION integersqrt.')
                            EXIT
                    CASE (a == 0):
                        Statements:
                            RETURN 0
                    CASE (a > 0):
                        Variables:
                            x, ra: REAL
                            epsilon: REAL
                            sqrt: INTEGER
                        Statements:
                            SET ra := FLOAT(a)
                            SET epsilon := (1e-07 * ra)
                            FOR x := (ra / 2.0) BY (((ra / x) - x) / 2.0) WHILE (abs((ra - (x * x))) > epsilon) DO
                                Statements:
                                    EMPTY
                            END FOR
                            FOR sqrt := (FIX(x) - 1) BY 1 WHILE (((sqrt + 1) * (sqrt + 1)) <= a) DO
                                Statements:
                                    EMPTY
                            END FOR
                            RETURN sqrt
                END SELECT
                RETURN 0
    Statements:
        INPUT(topnum)
        IF (topnum > 0) THEN
            Variables:
                sieve: ARRAY[1:topnum] OF BOOLEAN
                i, limit, count: INTEGER
            Statements:
                SET topnum := (topnum + 1)
                FOR i := 1 TO topnum DO
                    Statements:
                        SET sieve[i] := TRUE
                END FOR
                SET limit := (integersqrt(topnum) + 1)
                FOR i := 2 TO limit DO
                    Statements:
                        IF sieve[i] THEN
                            Variables:
                                j: INTEGER
                            Statements:
                                FOR j := (2 * i) BY i TO topnum DO
                                    Statements:
                                        SET sieve[j] := FALSE
                                END FOR
                        FI
                END FOR
                SET count := 0
                FOR i := 1 TO topnum DO
                    Statements:
                        IF sieve[i] THEN
                            Statements:
                                SET count := (count + 1)
                                OUTPUT(4:('Prime[' || str(count) || '] = ' || str(i)))
                        FI
                END FOR
        ELSE
            Statements:
                OUTPUT(3:('Input value ' || str(topnum) || ' non-positive.'))
        FI
        EXIT
